<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CrowdControl</name>
    </assembly>
    <members>
        <member name="T:WarpWorld.CrowdControl.CCBidWarLibrary">
            <summary>Keeps information of all of the bids for this play session. </summary>
        </member>
        <member name="M:WarpWorld.CrowdControl.CCBidWarLibrary.PlaceBid(System.String,System.UInt32)">
            <summary>Place a bid for an option. Returns true if the item sent in ends up being the highest and a different ID. </summary>
        </member>
        <member name="T:WarpWorld.CrowdControl.CCEffect">
            <summary> A single-trigger effect with no extra properties. </summary>
        </member>
        <member name="T:WarpWorld.CrowdControl.CCEffectBase">
            <summary> Basic Crowd Control effect properties. </summary>
        </member>
        <member name="M:WarpWorld.CrowdControl.CCEffectBase.OnTriggerEffect(WarpWorld.CrowdControl.CCEffectInstance)">
            <summary>
            Called when an effect instance is scheduled for execution. The returned value is communicated back to the server.
            <para>If <see cref="F:WarpWorld.CrowdControl.EffectResult.Retry"/> is returned, will be called again in <see cref="F:WarpWorld.CrowdControl.CCEffectBase.retryDelay"/> seconds,
            unless <see cref="F:WarpWorld.CrowdControl.CCEffectBase.maxRetries"/> is reached.</para>
            </summary>
        </member>
        <member name="M:WarpWorld.CrowdControl.CCEffectBase.PayloadSize(System.String)">
            <summary>Byte size of the playload for this effect. Can be overridden by a derived class.</summary>
        </member>
        <member name="M:WarpWorld.CrowdControl.CCEffectBase.Params">
            <summary>Additional Info for the effect. Can be overridden by a derived class.</summary>
        </member>
        <member name="M:WarpWorld.CrowdControl.CCEffectBase.ToggleSellable(System.Boolean)">
            <summary>Toggles whether this effect can currently be sold during this session.</summary>
        </member>
        <member name="M:WarpWorld.CrowdControl.CCEffectBase.ToggleVisible(System.Boolean)">
            <summary>Toggles whether this effect is visible in the menu during this session.</summary>
        </member>
        <member name="T:WarpWorld.CrowdControl.CCEffectBidWar">
            <summary> Base effect for bid war effects. </summary>
        </member>
        <member name="F:WarpWorld.CrowdControl.CCEffectBidWar.bidFor">
            <summary>Name of what the user is bidding towards.</summary>
        </member>
        <member name="F:WarpWorld.CrowdControl.CCEffectBidWar.cost">
            <summary>How many coins will be bid towards <see cref="F:WarpWorld.CrowdControl.CCEffectBidWar.bidFor"/></summary>
        </member>
        <member name="F:WarpWorld.CrowdControl.CCEffectBidWar.iconTints">
            <summary>A list of tints to be applied to the icon based on if there's a new bid winner.</summary>
        </member>
        <member name="M:WarpWorld.CrowdControl.CCEffectBidWar.PayloadSize(System.String)">
            <summary>Size of the playload for this effect.</summary>
        </member>
        <member name="M:WarpWorld.CrowdControl.CCEffectBidWar.Params">
            <summary>All Parameters for this effect as a string.</summary>
        </member>
        <member name="M:WarpWorld.CrowdControl.CCEffectBidWar.AssignTint(System.String)">
            <summary>Retrieve the tint associated with what's being bid and apply it to the icon.</summary>
        </member>
        <member name="T:WarpWorld.CrowdControl.CCEffectBidWarTint">
            <summary>The name of a bid paired up with a tint to apply for Bid War notifications.</summary>
        </member>
        <member name="F:WarpWorld.CrowdControl.CCEffectBidWarTint.bidName">
            <summary>Name of this entry.</summary>
        </member>
        <member name="F:WarpWorld.CrowdControl.CCEffectBidWarTint.tint">
            <summary>Color to tint the into when <see cref="F:WarpWorld.CrowdControl.CCEffectBidWarTint.bidName"/> is the winning bid.</summary>
        </member>
        <member name="T:WarpWorld.CrowdControl.CCEffectInstance">
            <summary>
            State of a Crowd Control effect.
            <para>The instance is only valid from the time the effect is requested up to
            the time the effect is successfully triggered or failed.</para>
            </summary>
        </member>
        <member name="P:WarpWorld.CrowdControl.CCEffectInstance.effect">
            <summary>Target effect behaviour containing the logic.</summary>
        </member>
        <member name="P:WarpWorld.CrowdControl.CCEffectInstance.user">
            <summary>
            The Twitch user who triggered the effect.
            <para>This is set to the special <see cref="P:WarpWorld.CrowdControl.CrowdControl.crowdUser"/> value for pooled effects.</para>
            <para>For local test effect instances, this is set to the special <see cref="P:WarpWorld.CrowdControl.CrowdControl.testUser"/> value.</para>
            </summary>
        </member>
        <member name="P:WarpWorld.CrowdControl.CCEffectInstance.id">
            <summary>
            Unique identifier of this instance, shared with the server. ID value are never reused.
            <para>If the effect is tested locally, this ID will be negative.</para>
            </summary>
        </member>
        <member name="P:WarpWorld.CrowdControl.CCEffectInstance.retryCount">
            <summary>
            How many times has the effect returned <see cref="F:WarpWorld.CrowdControl.EffectResult.Retry"/> when trying to start the instance.
            <para>If the associated <see cref="F:WarpWorld.CrowdControl.CCEffectBase.maxRetries"/> is reached, the instance is automatically
            terminated as if starting it returned <see cref="F:WarpWorld.CrowdControl.EffectResult.Failure"/>.</para>
            </summary>
        </member>
        <member name="P:WarpWorld.CrowdControl.CCEffectInstance.unscaledStartTime">
            <summary>Unscaled game time when the effect was triggered.</summary>
        </member>
        <member name="F:WarpWorld.CrowdControl.CCEffectInstance.isTest">
            <summary>When <see langword="true"/>, the effect executes locally without talking to the server.</summary>
        </member>
        <member name="P:WarpWorld.CrowdControl.CCEffectInstance.parameters">
            <summary>The parameters sent into the effect. Eg: Item Type, Quantity</summary>
        </member>
        <member name="P:WarpWorld.CrowdControl.CCEffectInstance.effectID">
            <summary>The id for the effect that's being used</summary>
        </member>
        <member name="T:WarpWorld.CrowdControl.CCEffectInstanceTimed">
            <summary>State of a Time-Based Crowd Control effect. The instance is valid from the time the effect is requested and lives until the effect is successfully stopped or failed.</summary>
        </member>
        <member name="P:WarpWorld.CrowdControl.CCEffectInstanceTimed.effect">
            <summary>Reference to the target timed effect, <see langword="null"/> if <see cref="P:WarpWorld.CrowdControl.CCEffectInstanceTimed.effect"/> is not timed.</summary>
        </member>
        <member name="P:WarpWorld.CrowdControl.CCEffectInstanceTimed.unscaledEndTime">
            <summary>Unscaled game time when the timed effect will end. Updated on resume.</summary>
        </member>
        <member name="P:WarpWorld.CrowdControl.CCEffectInstanceTimed.unscaledTimeLeft">
            <summary>Unscaled game time left to execute.</summary>
        </member>
        <member name="F:WarpWorld.CrowdControl.CCEffectInstanceTimed.isActive">
            <summary>
            Whether the effect instance is active. <see langword="true"/> when the related Effect behaviour is enabled.
            <para>When <see langword="false"/>, pending instances will not start and running instances are paused.</para>
            </summary>
        </member>
        <member name="P:WarpWorld.CrowdControl.CCEffectInstanceTimed.isPaused">
            <summary>Whether the effect instance is paused or not. </summary>
        </member>
        <member name="T:WarpWorld.CrowdControl.CCEffectParameters">
            <summary>A Crowd Control effect that handles parameters. </summary>
        </member>
        <member name="M:WarpWorld.CrowdControl.CCEffectParameters.AddParameters(System.Object[])">
            <summary>Function for dynamically adding object(s) to the parameter list. </summary>
        </member>
        <member name="M:WarpWorld.CrowdControl.CCEffectParameters.ClearParameters">
            <summary>Clearing the established parameter list. </summary>
        </member>
        <member name="M:WarpWorld.CrowdControl.CCEffectParameters.PayloadSize(System.String)">
            <summary>Size of the playload for this effect.</summary>
        </member>
        <member name="M:WarpWorld.CrowdControl.CCEffectParameters.Params">
            <summary>All Parameters for this effect as a string.</summary>
        </member>
        <member name="M:WarpWorld.CrowdControl.CCEffectParameters.AssignParameters(System.String[])">
            <summary>Used for processing the newly received parameter array. Can be overridden by a derived class.</summary>
        </member>
        <member name="T:WarpWorld.CrowdControl.CCEffectTimed">
            <summary> A Crowd Control effect active for a given duration of time. </summary>
        </member>
        <member name="T:WarpWorld.CrowdControl.CCEffectTimed.DisplayType">
            <summary>Options of how this timer displays time left. </summary>
        </member>
        <member name="P:WarpWorld.CrowdControl.CCEffectTimed.paused">
            <summary>Is the timer paused?</summary>
        </member>
        <member name="M:WarpWorld.CrowdControl.CCEffectTimed.OnEnable">
            <summary>Ran when the effect is enabled. Can be overridden by a derived class.</summary>
        </member>
        <member name="M:WarpWorld.CrowdControl.CCEffectTimed.OnDisable">
            <summary>Ran when the effect is disabled. Can be overridden by a derived class.</summary>
        </member>
        <member name="M:WarpWorld.CrowdControl.CCEffectTimed.OnTriggerEffect(WarpWorld.CrowdControl.CCEffectInstance)">
            <summary> Handles starting the timed effect. Override <see cref="!:OnStartEffect(EffectInstance)"/> instead. </summary>
        </member>
        <member name="M:WarpWorld.CrowdControl.CCEffectTimed.OnStartEffect(WarpWorld.CrowdControl.CCEffectInstanceTimed)">
            <summary> Invoked when an effect instance is scheduled to start. The effect should only be applied when <see cref="F:WarpWorld.CrowdControl.EffectResult.Success"/> is returned. </summary>
        </member>
        <member name="M:WarpWorld.CrowdControl.CCEffectTimed.OnStopEffect(WarpWorld.CrowdControl.CCEffectInstanceTimed,System.Boolean)">
            <summary>
            Invoked when an effect instance is scheduled to stop after its time is expired. Return false
            if the effect cannot be stopped at the current time to retry in <see cref="F:WarpWorld.CrowdControl.CCEffectBase.retryDelay"/>
            seconds.
            </summary>
            <param name="effectInstance">The target instance.</param>
            <param name="force">Set to true when called from <see cref="M:WarpWorld.CrowdControl.CrowdControl.StopAllEffects"/>,
            in which case failure to stop the effect is ignored.</param>
        </member>
        <member name="M:WarpWorld.CrowdControl.CCEffectTimed.OnPauseEffect">
            <summary> Invoked when an effect instance is paused. </summary>
        </member>
        <member name="M:WarpWorld.CrowdControl.CCEffectTimed.OnResumeEffect">
            <summary> Invoked when an effect instance is resumed. </summary>
        </member>
        <member name="M:WarpWorld.CrowdControl.CCEffectTimed.OnResetEffect">
            <summary> Invoked when an effect instance is reset. </summary>
        </member>
        <member name="F:WarpWorld.CrowdControl.CCEffectTimed.displayType">
            <summary> Whether the timer displays text or a fill graphic. </summary>
        </member>
        <member name="M:WarpWorld.CrowdControl.CCEffectTimed.Pause(WarpWorld.CrowdControl.CCEffectInstance)">
            <summary> Invoked when the behaviour is paused. </summary>
        </member>
        <member name="M:WarpWorld.CrowdControl.CCEffectTimed.Resume(WarpWorld.CrowdControl.CCEffectInstance)">
            <summary> Invoked when the behaviour is resumed. </summary>
        </member>
        <member name="M:WarpWorld.CrowdControl.CCEffectTimed.Reset(WarpWorld.CrowdControl.CCEffectInstance)">
            <summary> Invoked when the behaviour is Reset. </summary>
        </member>
        <member name="T:WarpWorld.CrowdControl.SocketStream">
            <summary>Handles sending and receiving byte streams from the server.</summary>
        </member>
        <member name="T:WarpWorld.CrowdControl.CrowdControl">
            <summary>
            The Crowd Control client instance. Handles communications with the server and triggering effects.
            </summary>
        </member>
        <member name="P:WarpWorld.CrowdControl.CrowdControl.instance">
            <summary>Singleton instance. Will be <see langword="null"/> if the behaviour isn't in the scene.</summary>
        </member>
        <member name="P:WarpWorld.CrowdControl.CrowdControl.testUser">
            <summary>Reference to the test user object. Used to dispatch local effects.</summary>
        </member>
        <member name="P:WarpWorld.CrowdControl.CrowdControl.crowdUser">
            <summary>Reference to the crowd user object. Used to dispatch pooled effects.</summary>
        </member>
        <member name="P:WarpWorld.CrowdControl.CrowdControl.streamerUser">
            <summary>Reference to the streamer user object.</summary>
        </member>
        <member name="P:WarpWorld.CrowdControl.CrowdControl.isAuthenticated">
            <summary>Did we start a session?</summary>
        </member>
        <member name="P:WarpWorld.CrowdControl.CrowdControl.isConnecting">
            <summary>Whether the connection to the server is currently initializing.</summary>
        </member>
        <member name="P:WarpWorld.CrowdControl.CrowdControl.isConnected">
            <summary>Are you connected or not</summary>
        </member>
        <member name="E:WarpWorld.CrowdControl.CrowdControl.OnConnecting">
            <summary>Invoked when attempting a connection to the Crowd Control server.</summary>
        </member>
        <member name="E:WarpWorld.CrowdControl.CrowdControl.OnConnectionError">
            <summary>Invoked when the connection to the Crowd Control server has failed.</summary>
        </member>
        <member name="E:WarpWorld.CrowdControl.CrowdControl.OnAuthenticated">
            <summary></summary>
        </member>
        <member name="E:WarpWorld.CrowdControl.CrowdControl.OnConnected">
            <summary>Invoked when successfully connected to the Crowd Control server.</summary>
        </member>
        <member name="E:WarpWorld.CrowdControl.CrowdControl.OnDisconnected">
            <summary>Invoked when disconnected from the Crowd Control server.</summary>
        </member>
        <member name="E:WarpWorld.CrowdControl.CrowdControl.OnEffectQueue">
            <summary>Invoked when an effect is scheduled for execution.</summary>
        </member>
        <member name="E:WarpWorld.CrowdControl.CrowdControl.OnEffectDequeue">
            <summary>Invoked when an effect leaves the scheduling queue.</summary>
        </member>
        <member name="E:WarpWorld.CrowdControl.CrowdControl.OnDisplayMessage">
            <summary>Invoked when an important message needs to be displayed.</summary>
        </member>
        <member name="E:WarpWorld.CrowdControl.CrowdControl.OnEffectTrigger">
            <summary>Invoked when an <see cref="T:WarpWorld.CrowdControl.CCEffectBase"/> is successfully triggered.</summary>
        </member>
        <member name="E:WarpWorld.CrowdControl.CrowdControl.OnEffectStart">
            <summary>Invoked when a <see cref="T:WarpWorld.CrowdControl.CCEffectTimed"/> is successfully started.</summary>
        </member>
        <member name="E:WarpWorld.CrowdControl.CrowdControl.OnEffectStop">
            <summary>Invoked when a <see cref="T:WarpWorld.CrowdControl.CCEffectTimed"/> is successfully stopped.</summary>
        </member>
        <member name="E:WarpWorld.CrowdControl.CrowdControl.OnEffectPause">
            <summary>Invoked on effect instances when the associated <see cref="T:WarpWorld.CrowdControl.CCEffectTimed"/> is disabled.</summary>
        </member>
        <member name="E:WarpWorld.CrowdControl.CrowdControl.OnEffectResume">
            <summary>Invoked on effect instances when the associated <see cref="T:WarpWorld.CrowdControl.CCEffectTimed"/> is enabled.</summary>
        </member>
        <member name="E:WarpWorld.CrowdControl.CrowdControl.OnEffectReset">
            <summary>Invoked on effect instances when the associated <see cref="T:WarpWorld.CrowdControl.CCEffectTimed"/> is reset.</summary>
        </member>
        <member name="M:WarpWorld.CrowdControl.CrowdControl.Connect">
            <summary>
            Connects to the Crowd Control server.
            </summary>
        </member>
        <member name="M:WarpWorld.CrowdControl.CrowdControl.Disconnect">
            <summary>
            Disconnects from the Crowd Control server.
            </summary>
        </member>
        <member name="M:WarpWorld.CrowdControl.CrowdControl.RegisterEffect(WarpWorld.CrowdControl.CCEffectBase)">
            <summary> Registers this effect during runtime. </summary>
        </member>
        <member name="M:WarpWorld.CrowdControl.CrowdControl.ToggleEffectSellable(System.UInt32,System.Boolean)">
            <summary> Toggles whether an effect can currently be sold during this session. </summary>
        </member>
        <member name="M:WarpWorld.CrowdControl.CrowdControl.ToggleEffectVisible(System.UInt32,System.Boolean)">
            <summary> Toggles whether an effect is visible in the menu during this session. </summary>
        </member>
        <member name="M:WarpWorld.CrowdControl.CrowdControl.SubmitTempToken(System.String)">
            <summary> Submits Temporary Token to the server. </summary>
        </member>
        <member name="M:WarpWorld.CrowdControl.CrowdControl.TestEffect(WarpWorld.CrowdControl.CCEffectBase)">
            <summary>Test an effect locally. Its events won't be sent to the server.</summary>
        </member>
        <member name="M:WarpWorld.CrowdControl.CrowdControl.CancelEffect(WarpWorld.CrowdControl.CCEffectInstance)">
            <summary>Cancels a received effect</summary>
        </member>
        <member name="M:WarpWorld.CrowdControl.CrowdControl.StopAllEffects">
            <summary>Forcefully terminates all pending and running effects.</summary>
        </member>
        <member name="M:WarpWorld.CrowdControl.CrowdControl.EnableEffect(WarpWorld.CrowdControl.CCEffectTimed)">
            <summary>Resume a timed effect.</summary>
        </member>
        <member name="M:WarpWorld.CrowdControl.CrowdControl.DisableEffect(WarpWorld.CrowdControl.CCEffectTimed)">
            <summary>Disable a timed effect.</summary>
        </member>
        <member name="M:WarpWorld.CrowdControl.CrowdControl.ResetEffect(WarpWorld.CrowdControl.CCEffectTimed)">
            <summary>Reset a timed effect.</summary>
        </member>
        <member name="M:WarpWorld.CrowdControl.CrowdControl.Pause(WarpWorld.CrowdControl.CCEffectInstanceTimed)">
            <summary>Pauses a timer effect.</summary>
        </member>
        <member name="M:WarpWorld.CrowdControl.CrowdControl.Resume(WarpWorld.CrowdControl.CCEffectInstanceTimed)">
            <summary>Resumes a timer command</summary>
        </member>
        <member name="M:WarpWorld.CrowdControl.CrowdControl.Reset(WarpWorld.CrowdControl.CCEffectInstanceTimed)">
            <summary>Resets a timer command</summary>
        </member>
        <member name="M:WarpWorld.CrowdControl.CrowdControl.HasRunningEffects">
            <summary>Returns true if at least one timed effect is currently running.</summary>
        </member>
        <member name="M:WarpWorld.CrowdControl.CrowdControl.IsRunning(WarpWorld.CrowdControl.CCEffectTimed)">
            <summary>Returns true if timed effect is running.</summary>
        </member>
        <member name="M:WarpWorld.CrowdControl.CrowdControl.StopOne(WarpWorld.CrowdControl.CCEffectTimed)">
            <summary>Stops a timer effect.</summary>
        </member>
        <member name="M:WarpWorld.CrowdControl.CrowdControl.IsPaused(WarpWorld.CrowdControl.CCEffectTimed)">
            <summary>Returns true if timed effect is paused.</summary>
        </member>
        <member name="T:WarpWorld.CrowdControl.EffectResult">
            <summary>Result of trying to trigger an effect. Determines the reply sent back to the server.</summary>
        </member>
        <member name="F:WarpWorld.CrowdControl.EffectResult.Success">
            <summary>The effect executed successfully.</summary>
        </member>
        <member name="F:WarpWorld.CrowdControl.EffectResult.Failure">
            <summary>The effect failed to trigger, but is still available for use. Viewer(s) will be refunded.</summary>
        </member>
        <member name="F:WarpWorld.CrowdControl.EffectResult.Unavailable">
            <summary>Same as <see cref="F:WarpWorld.CrowdControl.EffectResult.Failure"/> but the effect is no longer available for use.</summary>
        </member>
        <member name="F:WarpWorld.CrowdControl.EffectResult.Retry">
            <summary>The effect cannot be triggered right now, try again in a few seconds.</summary>
        </member>
        <member name="F:WarpWorld.CrowdControl.EffectResult.Queue">
            <summary>INTERNAL USE ONLY. The effect has been queued for execution after the current one ends.</summary>
        </member>
        <member name="F:WarpWorld.CrowdControl.EffectResult.Running">
            <summary>INTERNAL USE ONLY. The effect triggered successfully and is now active until it ends.</summary>
        </member>
        <member name="T:WarpWorld.CrowdControl.Attributes.EnumFlag">
            <summary>
            Attribute for serialized [Flags] properties. Uses a custom property drawer in the inspector.
            </summary>
        </member>
        <member name="M:WarpWorld.CrowdControl.Extensions.Forget(System.Threading.Tasks.Task)">
            <summary>
            Calls ConfigureAwait(false) on a task and logs any errors.
            </summary>
            <param name="task">The task to forget.</param>
        </member>
        <member name="T:WarpWorld.CrowdControl.TwitchUser">
            <summary>
            Information about a Twitch user profile.
            </summary>
        </member>
        <member name="F:WarpWorld.CrowdControl.TwitchUser.id">
            <summary>Unique Twitch user identifier.</summary>
        </member>
        <member name="F:WarpWorld.CrowdControl.TwitchUser.name">
            <summary>Unique Twitch user name. Always lowercase.</summary>
        </member>
        <member name="F:WarpWorld.CrowdControl.TwitchUser.displayName">
            <summary>Pretty printed user name.</summary>
        </member>
        <member name="F:WarpWorld.CrowdControl.TwitchUser.profileIconUrl">
            <summary>URL to download the profile icon from.</summary>
        </member>
        <member name="F:WarpWorld.CrowdControl.TwitchUser.profileIcon">
            <summary>Profile icon downloaded into a 2D texture. Can be <see langword="null"/>.</summary>
        </member>
        <member name="F:WarpWorld.CrowdControl.TwitchUser.profileIconColor">
            <summary>Color to tint the profile icon's background with.</summary>
        </member>
        <member name="T:CCEffectEntries">
            <summary>A database of every Crowd Control Effect that can be used on this game. </summary>
        </member>
        <member name="F:CCEffectEntries.effectArray">
            <summary>An array of every effect.</summary>
        </member>
        <member name="P:CCEffectEntries.Item(System.UInt32)">
            <summary>Retrieve an effect based on it's ID.</summary>
        </member>
        <member name="P:CCEffectEntries.Count">
            <summary>How many effects does the game have?</summary>
        </member>
        <member name="T:CCEffectEntry">
            <summary>A database entry of a Crowd Control Effect. </summary>
        </member>
        <member name="F:CCEffectEntry.id">
            <summary>Internal ID for this effect. </summary>
        </member>
        <member name="F:CCEffectEntry.className">
            <summary>Which class does this effect use? </summary>
        </member>
    </members>
</doc>
